datastructs:
  - double Yprev[s][n]
  - double Ycur[s][n]
  - double tmp[s]
  - double A[s][s]
  - double f
  - double Fs[s]
  - double Fn[n]
  - double y[n]
  - double tmp_s
computations:
  A: "f = %RHS"
  B: "Ycur[l][j] += A[l][i] * f"
  B1: "tmp[l] += A[l][i] * f"
  C: "Ycur[l][j] = Ycur[l][j] * h + y[j]"
  C1: "Ycur[l][j] = tmp[l] * h + y[j]"
  C2: "Ycur[l][j] = tmp_s * h + y[j]"
  D: "Fs[i] = %RHS"
  E: "Fn[j] = %RHS"
  F: "tmp_s += A[l][i] * Fs[l]"
  G: "Ycur[l][j] += A[l][i] * Fn[j]"
variants:
  - name : RHS_LC_jil
    code: |
        %PRAGMA ivdep
        %LOOP j n
            %LOOP i s unroll 1 assign 0
                %COMP A
                %LOOP l s unroll 0
                    %COMP B1
            %LOOP l s unroll 2
                %COMP C1
    codegen :
        RHS: "eval_component"
  - name : RHS_LC_jli
    code: |
        %PRAGMA ivdep
        %LOOP j n
            %LOOP i s unroll 0
                %COMP D
            %LOOP l s unroll 2
                %LOOP i s unroll 1 assign 0
                    %COMP F
                %COMP C2
  - name : RHS_LC_ijl
    code: |
        %PRAGMA nounroll_and_jam
        %LOOP i s
            %PRAGMA ivdep
            %LOOP j n
                %COMP A
                %LOOP l s unroll 0
                    %COMP B
        %PMODEL
        %PRAGMA ivdep
        %LOOP j n
            %LOOP l s unroll 1
                %COMP C
  - name : RHS_LC_ilj
    code: |
        %PRAGMA nounroll_and_jam
        %LOOP i s
            %PRAGMA ivdep
            %LOOP j n
                %COMP E
            %PMODEL
            %LOOP l s
                %PRAGMA ivdep
                %LOOP j n
                    %COMP G
        %PMODEL
        %PRAGMA nounroll_and_jam
        %LOOP l s
            %PRAGMA ivdep
            %LOOP j n
                %COMP C
    codegen :
        RHS: "eval_range"
codegen:
  loop splits:
    - i 0
  RHS: "eval_component"
  RHS_input: "Yprev[i]"
  RHS_butcher_nodes: "c[i]"
model_tool: kerncraft
