ivp_dependent: true
datastructs:
  - double t
  - double g
  - double c[s]
  - double Yprev[s][n]
  - double Ycur[s][n]
  - double A[s][s]
  - double h
  - double f[1]
  - double Fs[s]
  - double Fn[n]
  - double y[n]
computations:
  A: "f[0] = %RHS"
  B: "Ycur[l][j] += A[l][i] * f[0]"
  C: "Ycur[l][j] = Ycur[l][j] * h + y[j]"
  D: "Fs[i] = %RHS"
  E: "Fn[j] = %RHS"
  F: "Ycur[l][j] += A[l][i] * Fs[l]"
  G: "Ycur[l][j] += A[l][i] * Fn[j]"
variants:
  - name : RHS_LC_jil
    code: |
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START i s unroll 1 assign 0
      %COMP A
      %LOOP_START l s unroll 0
      %COMP B
      %LOOP_END l
      %LOOP_END i
      %LOOP_START l s unroll 2
      %COMP C
      %LOOP_END l
      %LOOP_END j
    pmodel :
      - working sets: { "s*n+n+s*s", "2*s*n+n+s*s" }
    codegen :
        RHS: "eval_component"
  - name : RHS_LC_jli
    code: |
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START i s unroll 0
      %COMP D
      %LOOP_END i
      %LOOP_START l s unroll 2
      %LOOP_START i s unroll 1 assign 0
      %COMP F
      %LOOP_END i
      %COMP C
      %LOOP_END l
      %LOOP_END j
    pmodel :
      - working sets: { "s*n+n+s*s+s", "2*s*n+n+s*s+s" }
  - name : RHS_LC_ijl
    code: |
      %PRAGMA nounroll_and_jam
      %LOOP_START i s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP A
      %LOOP_START l s unroll 0
      %COMP B
      %LOOP_END l
      %LOOP_END j
      %LOOP_END i
      %PMODEL
      %PRAGMA ivdep
      %LOOP_START j n
      %LOOP_START l s unroll 1
      %COMP C
      %LOOP_END l
      %LOOP_END j
    pmodel :
      - name : 1
        working sets: { "2*s*n+s*s", "s*n+n+s*s", "s*n+n+s" }
      - name : 2
        working sets: { "s*n+n" }
  - name : RHS_LC_ilj
    code: |
      %PRAGMA nounroll_and_jam
      %LOOP_START i s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP E
      %LOOP_END j
      %PMODEL
      %LOOP_START l s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP G
      %LOOP_END j
      %LOOP_END l
      %LOOP_END i
      %PMODEL
      %PRAGMA nounroll_and_jam
      %LOOP_START l s
      %PRAGMA ivdep
      %LOOP_START j n
      %COMP C
      %LOOP_END j
      %LOOP_END l
    pmodel :
      - name : 1
        working sets: { "s*n+n", "2*n" }
      - name : 2
        working sets: { "s*n+n+s*s", "s*n+n+s", "2*n" }
      - name : 3
        working sets: { "s*n+n", "2*n" }
    codegen :
        RHS: "eval_range"
codegen:
  loop splits:
    - i 0
  RHS: "eval_component"
  RHS_input: "Yprev[i]"
  RHS_butcher_nodes: "c[i]"
model_tool: kerncraft
