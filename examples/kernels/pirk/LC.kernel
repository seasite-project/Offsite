datastructs:
  - double Y[s][n]
  - double Yn[s]
  - double A[s][s]
  - double tmp
  - double h
  - double F[s][n]
  - double y[n]
computations:
  A: "Y[l][j] += A[l][i] * F[i][j]"
  A1: "tmp += A[l][i] * F[i][j]"
  A2: "Yn[l] += A[l][i] * F[i][j]"
  B: "Y[l][j] = Y[l][j] * h + y[j]"
  B1: "Y[l][j] = tmp * h + y[j]"
  B2: "Y[l][j] = Yn[l] * h + y[j]"
variants:
  - name : LC_ijl
    code: |
        %PRAGMA nounroll_and_jam
        %LOOP i s
            %PRAGMA ivdep
            %LOOP j n
                %LOOP l s unroll 0
                    %COMP A
        %PMODEL
        %PRAGMA ivdep
        %LOOP j n
            %LOOP l s unroll 1
                %COMP B
  - name : LC_ilj
    code: |
        %PRAGMA nounroll_and_jam
        %LOOP i s
            %PRAGMA nounroll_and_jam
            %LOOP l s
                %PRAGMA ivdep
                %LOOP j n
                    %COMP A
        %PMODEL
        %LOOP l s
            %PRAGMA ivdep
            %LOOP j n
                %COMP B
  - name : LC_jil
    code: |
        %PRAGMA ivdep
        %LOOP j n
            %LOOP i s unroll 1
                %LOOP l s unroll 0
                    %COMP A2
            %LOOP l s unroll 2
                %COMP B2
  - name : LC_jli
    code: |
        %PRAGMA ivdep
        %LOOP j n
            %LOOP l s unroll 1
                %LOOP i s unroll 0
                    %COMP A1
                %COMP B1
  - name : LC_lij
    code: |
        %PRAGMA nounroll_and_jam
        %LOOP l s
            %PRAGMA nounroll_and_jam
            %LOOP i s
                %PRAGMA ivdep
                %LOOP j n
                    %COMP A
            %PMODEL
            %PRAGMA ivdep
            %LOOP j n
                %COMP B
  - name : LC_lji
    code: |
        %PRAGMA nounroll_and_jam
        %LOOP l s
            %PRAGMA ivdep
            %LOOP j n
                %LOOP i s unroll
                    %COMP A1
                %COMP B1
codegen:
  loop splits:
    - i 0
model_tool: kerncraft
