model_tool: kerncraft
ODE grid dim: n
characteristics:
  - sparse
  - stencil
  - stencil_dim: 1
  - stencil_radius: 4
  - access_distance: 4
constants:
  - double wave_k = 0.5
  - double wave_c = 3.0
  - double xmin = -50.0
  - double xmax = 450.0
  - double deltax = ((xmax - xmin) / (g - 1.0))
components:
  - type: memory-bound
    first: 4
    size: n-8
    code: |
      -1.0 / deltax * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - %in[j + 3]) + 1.0 / 280.0 * (%in[j - 4] - %in[j + 4]))
codegen:
  eval_range: |
    int j = first;

    if (j < 4)
    {
      if (j == 0 && j <= last)
      {
        f[0] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (0.0 - %in[1]) + 1.0 / 5.0 * (0.0 - %in[2]) - 4.0 / 105.0 * (0.0 - %in[3]) + 1.0 / 280.0 * (0.0 - %in[4]));
        ++j;
      }
      if (j == 1 && j <= last)
      {
        f[1] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[0] - %in[2]) + 1.0 / 5.0 * (0.0 - %in[3]) - 4.0 / 105.0 * (0.0 - %in[4]) + 1.0 / 280.0 * (0.0 - %in[5]));
        ++j;
      }
      if (j == 2 && j <= last)
      {
        f[2] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[1] - %in[3]) + 1.0 / 5.0 * (%in[0] - %in[4]) - 4.0 / 105.0 * (0.0 - %in[5]) + 1.0 / 280.0 * (0.0 - %in[6]));
        ++j;
      }
      if (j == 3 && j <= last)
      {
        f[3] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[2] - %in[4]) + 1.0 / 5.0 * (%in[1] - %in[5]) - 4.0 / 105.0 * (%in[0] - %in[6]) + 1.0 / 280.0 * (0.0 - %in[7]));
        ++j;
      }
    }

    for (; j <= last && j < g - 4; ++j)
    {
      f[j] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - %in[j + 3]) + 1.0 / 280.0 * (%in[j - 4] - %in[j + 4]));
    }

    if (last >= g - 4)
    {
      if (j == g - 4 && j <= last)
      {
        f[j] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - %in[j + 3]) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
        ++j;
      }
      if (j == g - 3 && j <= last)
      {
        f[j] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - 0.0) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
        ++j;
      }
      if (j == g - 2 && j <= last)
      {
        f[j] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - 0.0) - 4.0 / 105.0 * (%in[j - 3] - 0.0) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
        ++j; 
      }
      if (j == g - 1 && j <= last)
      {
        f[j] = -1.0 / ((xmax - xmin) / ((double) g - 1.0)) *(-4.0 / 5.0 * (%in[j - 1] - 0.0) + 1.0 / 5.0 * (%in[j - 2] - 0.0) - 4.0 / 105.0 * (%in[j - 3] - 0.0) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
        ++j; 
      }
    }
  eval_component: |
    if (j < g - 4)
    {
      return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - %in[j + 3]) + 1.0 / 280.0 * (%in[j - 4] - %in[j + 4]));
    }

    if (j < 4)
    {
      if (j == 0)
      {
        return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (0.0 - %in[j + 1]) + 1.0 / 5.0 * (0.0 - %in[j + 2]) - 4.0 / 105.0 * (0.0 - %in[j + 3]) + 1.0 / 280.0 * (0.0 - %in[j + 4]));
      }
      if (j == 1)
      {
        return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (0.0 - %in[j + 2]) - 4.0 / 105.0 * (0.0 - %in[j + 3]) + 1.0 / 280.0 * (0.0 - %in[j + 4]));
      }
      if (j == 2)
      {
        return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (0.0 - %in[j + 3]) + 1.0 / 280.0 * (0.0 - %in[j + 4]));
      }
      if (j == 3)
      {
        return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - %in[j + 3]) + 1.0 / 280.0 * (0.0 - %in[j + 4]));
      }
    }

    if (j == g - 4)
    {
      return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - %in[j + 3]) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
    }
    if (j == g - 3)
    {
      return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - %in[j + 2]) - 4.0 / 105.0 * (%in[j - 3] - 0.0) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
    }
    if (j == g - 2)
    {
      return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) * (-4.0 / 5.0 * (%in[j - 1] - %in[j + 1]) + 1.0 / 5.0 * (%in[j - 2] - 0.0) - 4.0 / 105.0 * (%in[j - 3] - 0.0) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
    }
    if (j == g - 1)
    {
      return -1.0 / ((xmax - xmin) / ((double) g - 1.0)) *(-4.0 / 5.0 * (%in[j - 1] - 0.0) + 1.0 / 5.0 * (%in[j - 2] - 0.0) - 4.0 / 105.0 * (%in[j - 3] - 0.0) + 1.0 / 280.0 * (%in[j - 4] - 0.0));
    }
    return -1;
  initial_values: |
    for (int i = 0; i < n; ++i)
    {
      double x = xmin + ((double) i * ((xmax - xmin) / ((double) g - 1.0)));
      %in[i] = wave_k * exp(-(x * x) / (wave_c * wave_c));
    }
  required_indices: |
    std::set<int> set;
    for(int i = imax(first - 4, 0); i <= imin(last + 4, n-1); i++)
    {
      set.insert(i);
    }
    return set;
